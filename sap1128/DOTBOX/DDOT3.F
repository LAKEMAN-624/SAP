
      SUBROUTINE DOT200(INFO,NDV,NCON,IPRINT,OBJ,
     *X,XL,XU,G,RPRM,IPRM,IPOINT,WK,IWK,DF,A,IC,NGT,MINMAX,
     *SCALX,NSCAL,NAC,NVC,METHOD)
C
C                 ***** (C) COPYRIGHT *****
C     ***** VANDERPLAATS RESEARCH & DEVELOPMENT, INC. *****
C         ***** ALL RIGHTS RESERVED, WORLDWIDE *****
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION X(*),XL(*),XU(*),G(*),RPRM(*),IPRM(*),
     *IPOINT(*),WK(*),IWK(*),DF(*),A(NDV,*),IC(*),SCALX(*)
      N=IPOINT(27)-1
      ALPHA=WK(N+25)
      ALPMAX=WK(N+26)
      ALPSAV=WK(N+27)
      ALPBST=WK(N+28)
      GMAX=WK(N+29)
      DF2=WK(N+30)
      PHI=WK(N+31)
      GMX1=WK(N+32)
      OBJ1=WK(N+33)
      SLOPF=WK(N+34)
      IF(INFO.EQ.0) THEN
         CT=RPRM(1)
      ELSE
         CT=WK(N+35)
      ENDIF
      OBJR=WK(N+36)
      RMVLMT=WK(N+37)
      GMXOLD=WK(N+38)
      SCALS=WK(N+39)
      N=IPOINT(35)-1
      IDAB=IWK(N+15)
      IDEL=IWK(N+16)
      ITER=IWK(N+17)
      NAVC1=IWK(N+18)
      KCOUNT=IWK(N+19)
      LGOTO=IWK(N+20)
      NACS=IWK(N+21)
      JSCAL=IWK(N+22)
      KGOTO=IWK(N+23)
      NGMAX=IWK(N+24)
      NRB=IWK(N+25)
      JTER=IWK(N+26)
      ICOUNT=IWK(N+27)
      NAVCR=IWK(N+28)
      NXTMP1=IPOINT(3)
      NXTMP2=IPOINT(4)
      NXTMP3=IPOINT(5)
      NDX=NXTMP2
      NDFG=NXTMP3
      NS=IPOINT(6)
      NB=IPOINT(8)
      NH=NB
      NGTMP=IPOINT(9)
      NGL=IPOINT(10)
      NDG=IPOINT(14)
      NC=IPOINT(15)
      NTHETA=IPOINT(16)
      NGZRO=IPOINT(18)
      NXZRO=IPOINT(23)
      NXLSLP=IPOINT(24)
      NXUSLP=IPOINT(25)
      NASLP=IPOINT(26)
      NGSAV=IPOINT(28)
      NHM=NGSAV+NCON
      NGMULT=NHM+NDV*(NDV+1)/2
      NLAMDA=NGMULT+NCON
      NP=NLAMDA+MAX(NDV,NCON)
      NISIDC=IPOINT(32)
      NITMP=IPOINT(33)
      NICSLP=IPOINT(36)
      NIMOVE=IPOINT(37)
      IF(INFO.EQ.0) KGOTO=0
      IF(NCON.GT.0) GO TO 10
      CALL DOT217(KGOTO,INFO,NDV,NCON,OBJ,X,DF,WK(NS),XL,
     1XU,IPRINT,WK,IWK,WK(NH),WK(NDX),WK(NDFG),IWK(NISIDC),
     2G,RPRM,IPRM,IPOINT,MINMAX,SCALX,NSCAL,ALPHA,ALPMAX,
     3ALPSAV,OBJ1,SLOPF,IDAB,IDEL,ITER,JSCAL,LGOTO,METHOD,ICOUNT,
     4DF2)
      NAC=0
      NVC=0
      NGT=0
      GO TO 20
10    CONTINUE
      IF(METHOD.EQ.2) GO TO 12
      IF(METHOD.EQ.3) GO TO 13
      CALL DOT201 (KGOTO,INFO,NDV,NCON,NGT,NAC,NVC,IPRINT,OBJ,X,XL,XU,
     1DF,WK(NS),G,IC,WK(NDG),WK(NTHETA),WK(NC),IWK(NISIDC),
     2WK(NXTMP1),WK(NGL),IWK(NITMP),A,WK(NB),NRB,WK,IWK,WK(NGTMP),
     3RPRM,IPRM,IPOINT,MINMAX,SCALX,NSCAL,ALPHA,ALPMAX,
     4ALPSAV,DF2,PHI,GMX1,IDAB,IDEL,ITER,KCOUNT,
     5LGOTO,NACS,CT,METHOD,NGMAX,OBJ1,SLOPF,SCALS,ICOUNT,NAVCR)
      GO TO 20
12    CONTINUE
      CALL DOT300 (KGOTO,INFO,NDV,NCON,NGT,NAC,NVC,IPRINT,OBJ,X,XL,XU,
     1DF,G,IC,IWK(NISIDC),IWK(NITMP),A,WK,IWK,RPRM,IPRM,IPOINT,MINMAX,
     2SCALX,NSCAL,IDAB,IDEL,NACS,OBJR,OBJ1,RMVLMT,JTER,
     3WK(NXLSLP),WK(NXUSLP),WK(NGZRO),WK(NXZRO),WK(NASLP),IWK(NICSLP),
     4METHOD,NGMAX,NRB,GMXOLD,IWK(NIMOVE),NAVCR)
      GO TO 20
13    CONTINUE
      CALL DOT310 (KGOTO,INFO,NDV,NCON,OBJ,G,NGT,IC,DF,A,X,WK,IWK,
     1IWK(NICSLP),XL,XU,WK(NS),IPRINT,SCALX,IWK(NISIDC),IWK(NITMP),
     2NRB,NAC,NVC,WK(NXLSLP),WK(NXUSLP),RPRM,IPRM,IPOINT,NGMAX,
     3MINMAX,WK(NASLP),WK(NDG),WK(NXZRO),WK(NGZRO),WK(NC),WK(NHM),
     4WK(NGMULT),WK(NLAMDA),WK(NP),WK(NGL),ALPMAX,ALPSAV,ALPBST,ALPHA,
     5GMAX,GMX1,GMXOLD,LGOTO,IDEL,IDAB,JTER,NAVC1,OBJ1,DF2,CT,
     6SCALS,PHI,SLOPF,NACS,WK(NGSAV),NAVCR)
20    CONTINUE
      IF(KGOTO.EQ.0) INFO=0
      N=IPOINT(27)-1
      WK(N+25)=ALPHA
      WK(N+26)=ALPMAX
      WK(N+27)=ALPSAV
      WK(N+28)=ALPBST
      WK(N+29)=GMAX
      WK(N+30)=DF2
      WK(N+31)=PHI
      WK(N+32)=GMX1
      WK(N+33)=OBJ1
      WK(N+34)=SLOPF
      WK(N+35)=CT
      WK(N+36)=OBJR
      WK(N+37)=RMVLMT
      WK(N+38)=GMXOLD
      WK(N+39)=SCALS
      N=IPOINT(35)-1
      IF(METHOD.LE.1.OR.NCON.EQ.0) THEN
         ITEST=ITER-IWK(N+17)
         IF(ITEST.EQ.1) IPRM(19)=ITER-1
         IF(INFO.EQ.0) IPRM(19)=ITER
      ELSE
         ITEST=JTER-IWK(N+26)
         IF(ITEST.EQ.1) IPRM(19)=JTER-1
         IF(INFO.EQ.0) IPRM(19)=JTER
      ENDIF
      IWK(N+15)=IDAB
      IWK(N+16)=IDEL
      IWK(N+17)=ITER
      IWK(N+18)=NAVC1
      IWK(N+19)=KCOUNT
      IWK(N+20)=LGOTO
      IWK(N+21)=NACS
      IWK(N+22)=JSCAL
      IWK(N+23)=KGOTO
      IWK(N+26)=JTER
      IWK(N+27)=ICOUNT
      IWK(N+28)=NAVCR
      RETURN
      END
      SUBROUTINE DOT201 (IGOTO,INFO,NDV,NCON,NGT,NAC,NVC,IPRINT,OBJ,
     2X,XL,XU,DF,S,G,IC,DG,THETA,C,ISIDC,XTMP,GGL,ITMP,A,B,
     3NRB,WK,IWK,GTMP,RPRM,IPRM,IPOINT,MINMAX,SCALX,NSCAL,
     4ALPHA,ALPMAX,ALPSAV,DF2,PHI,GMX1,IDAB,IDEL,ITER,
     5KCOUNT,LGOTO,NACS,CT,METHOD,NGMAX,OBJ1,SLOPF,SCALS,ICOUNT,NAVCR)
C
C                 ***** (C) COPYRIGHT *****
C     ***** VANDERPLAATS RESEARCH & DEVELOPMENT, INC. *****
C         ***** ALL RIGHTS RESERVED, WORLDWIDE *****
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION X(*),XL(*),XU(*),DF(*),S(*),G(*),IC(*),DG(*),
     1THETA(*),C(*),ISIDC(*),XTMP(*),GGL(*),ITMP(*),
     2A(NDV,*),B(NRB,*),WK(*),IWK(*),GTMP(*),RPRM(*),IPRM(*),IPOINT(*),
     3SCALX(*),DUMMY(1)
      ZRO=1.0E-6
      STOL=0.001
      RSDMX=1.
      BETA=1.
      CTMIN=RPRM(2)
      DABOBJ=RPRM(3)
      DELOBJ=RPRM(4)
      DOBJ1=RPRM(5)
      DOBJ2=RPRM(6)
      DX1=RPRM(7)
      DX2=RPRM(8)
      THTZ=RPRM(14)
      ICNDIR=NDV
      ITMAX=IPRM(3)
      ITRMOP=IPRM(4)
      IWRITE=IPRM(5)
      NCOLA=IPRM(6)
      IGMAX=IPRM(7)
      IPRNT2=IPRM(12)
      JWRITE=IPRM(13)
      NAVC=NAC+NVC
      NACT=NAVC+NACS
      IGOTO1=IGOTO+1
      GO TO (10,60,330), IGOTO1
10    CONTINUE
      IF (IPRINT.GT.1) WRITE (IWRITE,610)
      ITER=0
      ICOUNT=0
      PHI=5.
      IDEL=0
      IDAB=0
      NGRAD=1
      OBJTRU=OBJ
      DO 20 I=1,NDV
         ISIDC(I)=0
         S(I)=0.
20    CONTINUE
      IF(METHOD.EQ.1.AND.JWRITE.GT.0) CALL DOT506 (ITER,NDV,NCON,
     *JWRITE,OBJ,X,SCALX,G)
40    CONTINUE
      ITER=ITER+1
      IF (IPRINT.GT.2) WRITE (IWRITE,720) ITER
      IF (NGRAD.EQ.0) GO TO 65
      CALL DOT203 (NDV,NCON,NGMAX,NGT,G,IC,CT,CTMIN,NAC,NVC,IGMAX)
      IF(NGT.GT.NGMAX) THEN
         IF(IPRINT.GT.0.AND.NVC.EQ.0) THEN
            WRITE(IWRITE,64)NGT,NGMAX,NCOLA
64       FORMAT(//,2X,'***** THE NUMBER OF ACTIVE',
     *   ' CONSTRAINTS EXCEEDS NGMAX',/,'   CHECK NGMAX AND NCOLA',
     *   /,'    CURRENT VALUES ARE',/,
     *   '    NUMBER OF ACTIVE/VIOLATED CONSTRAINTS, NGT =',I10,/,
     *   '    NUMBER ALLOWED,                      NGMAX =',I10,/,
     *   '    ARRAY DIMENSION,                     NCOLA =',I10,/,
     *   '  ***** OPTIMIZATION TERMINATED')
            IGOTO=0
            IPRM(18)=3
            RETURN
         ENDIF
         IF(IPRINT.GT.0.AND.NVC.GT.0) WRITE(IWRITE,66)NGT,NGMAX,NCOLA
66       FORMAT(//,2X,'***** THE NUMBER OF ACTIVE/VIOLATED',
     *   ' CONSTRAINTS EXCEEDS NGMAX',/,'   CHECK NGMAX AND NCOLA',
     *   /,'    CURRENT VALUES ARE',/,
     *   '    NUMBER OF ACTIVE/VIOLATED CONSTRAINTS, NGT =',I10,/,
     *   '    NUMBER ALLOWED,                      NGMAX =',I10,/,
     *   '    ARRAY DIMENSION,                     NCOLA =',I10,/,
     *   '  ***** OPTIMIZATION WILL CONTINUE BUT MAY NOT BE RELIABLE')
         IF (IPRINT.GE.3) THEN
            NAVC=NAC+NVC
            WRITE (IWRITE,294) NAC,NVC
            IF(NAVC.GT.0) THEN
               WRITE(IWRITE,292)
               WRITE(IWRITE,293) (IC(I),I=1,NAVC)
            ENDIF
            WRITE(IWRITE,295)
         ENDIF
294   FORMAT (/,2X,'* * * BEFORE MODIFICATION * * *',//,2X,'THERE ARE',
     1I8,' ACTIVE CONSTRAINTS AND',I8,' VIOLATED CONSTRAINTS')
295   FORMAT (/,2X,'* * * AFTER MODIFICATION * * *')
         CALL DOT221(NGT,IC,G,NGMAX,NAC,NVC,CTMIN)
      ENDIF
      CALL DOT212 (NDV,NACS,X,XL,XU,ISIDC,SCALX)
      NGTNAS=NGT+NACS+1
      IF(NGTNAS.GT.NRB) THEN
         WRITE(IWRITE,62)NGT,NACS,NRB,NDV,NCON
62       FORMAT(//,2X,'***** THE NUMBER OF CRITICAL CONSTRAINTS',/,2X,
     *   ' PLUS ACTIVE SIDE CONSTRAINTS +1 EXCEEDS NRB',/,2X,
     *   '   CHECK NRB',/,'    CURRENT VALUES ARE',/,2X,
     *   '    NUMBER OF CRITICAL CONSTRAINTS,    NGT  =',I10,/,2X,
     *   '    NUMBER OF ACTIVE SIDE CONSTRAINTS, NACS =',I10,/,2X,
     *   '    ARRAY DIMENSION,                   NRB  =',I10,/,2X,
     *   '    NUMBER OF DESIGN VARIABLES,        NDV  =',I10,/,2X,
     *   '    NUMBER OF CONSTRAINTS              NCON =',I10,/,2X,
     *   '   NOTE: IF IGMAX = 1, TRY IGMAX = 0 TO REDUCE SPACE',/,2X,
     *   '   NOTE: NRB = MIN(NCON+2*NDV+1,NCOLA+1)',/,
     *   '  ***** OPTIMIZATION TERMINATED')
         IGOTO=0
         IPRM(18)=4
         IPRM(20)=NGT
         RETURN
      ENDIF
      IGOTO=1
      INFO=2
      OBJ=OBJTRU
      RETURN
60    CONTINUE
65    CONTINUE
      NAVC=NAC+NVC
      IF (IPRINT.GE.3) THEN
         WRITE (IWRITE,291) NAC,NVC
         IF(NAVC.GT.0) THEN
            WRITE(IWRITE,292)
            WRITE(IWRITE,293) (IC(I),I=1,NAVC)
         ENDIF
      ENDIF
291   FORMAT (/,2X,'THERE ARE',I8,' ACTIVE CONSTRAINTS AND',I8,
     1' VIOLATED CONSTRAINTS')
292   FORMAT (2X,'CONSTRAINT NUMBERS')
293   FORMAT (2X,5I10)
      IF(IPRINT.GE.4) THEN
         ICALC=3
         JSCAL=1
         CALL DOT502(ICALC,DF,NDV,IWRITE,JSCAL,SCALX)
         IF (NCON.GT.0.AND.NGT.GT.0) THEN
            JSCAL=-1
            DO 1280 J=1,NAVC
               JJ=IC(J)
               WRITE(IWRITE,282) JJ
               CALL DOT501(A(1,J),NDV,IWRITE,JSCAL,SCALX)
1280        CONTINUE
         ENDIF
      ENDIF
      NN=1
      CALL DOT206 (NDV,NN,DF,NDV,GGL)
      SCALF=GGL(1)
      IF (NAVC.GT.0) THEN
         CALL DOT206 (NDV,NAVC,A,NDV,GGL)
         CALL DOT220(NDV,A,NGT,IC,NAC,NVC,G,IWRITE,IPRINT,CTMIN,GGL,IER)
         NAVC=NAC+NVC
         IF(IER.GT.0) THEN
            WRITE(IWRITE,287)
            IPRM(18)=5
            IGOTO=0
            RETURN
         ENDIF
287   FORMAT(//,2X,'**** ONE OR MORE VIOLATED CONSTRAINTS HAS A',
     *' ZERO GRADIENT ****',/,21X,'NO PROGRESS IS POSSIBLE',/,
     *20X,' OPTIMIZATION TERMINATED')
      ENDIF
282   FORMAT(/,2X,'GRADIENT OF CONSTRAINT NUMBER',I8)
      IF (IPRINT.GE.3) THEN
      WRITE (IWRITE,650) NACS
      IF (NACS.EQ.0) GO TO 90
      N=0
      DO 80 I=1,NDV
         IF (ISIDC(I).EQ.0) GO TO 80
         IF (ISIDC(I).EQ.1) GO TO 70
         N=N+1
         ITMP(N)=-I
70       IF (ISIDC(I).LT.0) GO TO 80
         N=N+1
         ITMP(N)=I
80       CONTINUE
         WRITE (IWRITE,660)
         WRITE (IWRITE,640) (ITMP(I),I=1,NACS)
90    CONTINUE
      ENDIF
      NACT=NAVC+NACS
      IF (NACT.GT.0) GO TO 130
      IF(NSCAL.EQ.1) ICOUNT=0
      ICOUNT=ICOUNT+1
      IF (IDEL.EQ.1.OR.IDAB.EQ.1) ICOUNT=1
      IF (ICOUNT.GT.ICNDIR) ICOUNT=1
120   IF (ICOUNT.EQ.1) THEN
         SCALS=0.
         DF2=1.
      ENDIF
      DFDF=0.
      DO 71 I=1,NDV
         DFD=DF(I)*DF(I)
         IF (ISIDC(I).GE.1.AND.DF(I).GE.0.) DFD=0.
         IF (ISIDC(I).LE.-1.AND.DF(I).LE.0.) DFD=0.
         DFDF=DFDF+DFD
71    CONTINUE
      BETA=SCALS*DFDF/DF2
      DF2=DFDF
      DO 81 I=1,NDV
         S(I)=-DF(I)+BETA*S(I)
81    CONTINUE
      DO 101 I=1,NDV
         IF (ISIDC(I).EQ.-1.AND.S(I).LT.0.) S(I)=0.
         IF (ISIDC(I).EQ.1.AND.S(I).GT.0.) S(I)=0.
         IF (ISIDC(I).EQ.2) S(I)=0.
101   CONTINUE
      CALL DOT403(NDV,S,SCALS)
      CALL DOT404 (NDV,DF,S,SLOPF)
      ZROM=-ZRO
      IF (SLOPF.LT.ZROM.OR.ICOUNT.EQ.1) GO TO 160
      ICOUNT=1
      GO TO 120
130   CONTINUE
      ICOUNT=0
      IF (NVC.EQ.0) PHI=5.
      PHI=10.*PHI
      IF (PHI.GT.1000.) PHI=1000.
      IF(NVC.GT.NDV) THEN
         BETA=0.
         RSDMX=1.
         SCALGM=1.0E+30
         DO 137 I=1,NAVC
            SCALGM=MIN(GGL(I),SCALGM)
137      CONTINUE
         SCALGM=SCALF/SCALGM
         DO 131 I=1,NDV
            S(I)=-DF(I)*SCALGM
131      CONTINUE
         DO 132 J=1,NAVC
            ICJ=IC(J)
            GVAL=PHI*GGL(J)*(G(ICJ)-CT+1.)**2
            DO 132 I=1,NDV
               S(I)=S(I)-GVAL*A(I,J)
132      CONTINUE
         RSDMX=0.
         DO 133 I=1,NDV
            IF (ISIDC(I).EQ.-1.AND.S(I).LT.0.) S(I)=0.
            IF (ISIDC(I).EQ.1.AND.S(I).GT.0.) S(I)=0.
            IF (ISIDC(I).EQ.2) S(I)=0.
            RSDMX=MAX(RSDMX,ABS(S(I)))
133      CONTINUE
         IF(RSDMX.LE.STOL) GO TO 460
         BETA=1.
         CALL DOT403(NDV,S,SCALS)
      ELSE
         CALL DOT209 (NDV,NAC,NVC,NACS,CT,CTMIN,PHI,GGL,G,
     1   DF,A,IC,ISIDC,ITMP,B,NRB,SCALF,S,THETA,C,BETA,RSDMX,THTZ)
         IF (IPRNT2.GT.0) WRITE (IWRITE,680) BETA,RSDMX
      ENDIF
      OBJ1=OBJ
      IF (NVC.GT.0.AND.BETA.GT.0.01) GO TO 150
      IF (NACS.EQ.NDV.AND.BETA.LE.0.01) GO TO 460
      IF (RSDMX.GT.STOL.AND.BETA.GT.1.0E-5) GO TO 150
      ALPHA=0.
      DO 140 I=1,NAVC
         II=IC(I)
         CC=CTMIN
         IF (ABS(G(II)).GT.CC) GO TO 420
140   CONTINUE
      RSDMX=0.
      GO TO 460
150   CONTINUE
      CALL DOT404 (NDV,DF,S,SLOPF)
160   CONTINUE
      IF (IPRINT.GT.4) THEN
         ICALC=2
         JSCAL=0
         CALL DOT502 (ICALC,S,NDV,IWRITE,JSCAL,SCALX)
      ENDIF
      DO 221 I=1,NCON
         DG(I)=0.
221   CONTINUE
      IF(NGT.GT.0) THEN
         DO 220 I=1,NCON
            DO 190 J=1,NGT
               J1=J
               IF (IC(J).EQ.I) GO TO 200
190         CONTINUE
            GO TO 220
200         CONTINUE
            GTMP(J1)=0.
            DO 210 J=1,NDV
               DG(I)=DG(I)+A(J,J1)*S(J)
210         CONTINUE
            GTMP(J1)=DG(I)
220      CONTINUE
         IF (IPRINT.GT.6.AND.NAVC.GT.0) THEN
            WRITE(IWRITE,296)
            WRITE(IWRITE,293) (IC(I),I=1,NAVC)
296   FORMAT (/,2X,'RETAINED ACTIVE/VIOLATED CONSTRAINT NUMBERS')
            ICALC=7
            JSCAL=0
            CALL DOT502 (ICALC,GTMP,NAVC,IWRITE,JSCAL,SCALX)
         ENDIF
      ENDIF
      IF (NVC.GT.0.OR.NAVC.EQ.0) GO TO 320
      CALL DOT222 (NDV,NAVC,A,B,IC,DG,NAVCR)
      IF(NAVCR.LE.0) GO TO 320
      CALL DOT213(NAVCR,B,NER)
320   CONTINUE
      IF(ITER.EQ.1) THEN
         CALL DOT219(OBJ,SLOPF,DOBJ1,DOBJ2,NDV,DX1,DX2,X,S,ALPHA)
         ALPSAV=ALPHA
      ENDIF
      OBJ1=OBJ
      ALP1=ALPHA
      ALPHA=.5*(ALPHA+ALPSAV)
      ALPSAV=ALP1
      ONEM4=0.0001
      ALPHA=MAX(ALPHA,ONEM4)
      CALL DOT112 (NDV,X,S,XL,XU,ALPMAX,SCALX)
      IF (ALPMAX.LE.ZRO) GO TO 460
      IF(NVC.GT.0) THEN
         A2=ABS(OBJ)
         ONE=1.0
         A1=MAX(A2,ONE)
         A2=SLOPF
         IF(ABS(A2).LT.ZRO) A2=ZRO
         A1=A1/A2
         IF(A1.LT.ALPMAX.AND.A1.GT.0.0) ALPMAX=A1
      ENDIF
      ALPHA=MIN(ALPHA,ALPMAX)
      ALP1=5.*ALPHA
      ALP1=MIN(ALP1,ALPMAX)
      ALP2=0.
      II=0
      IF(NGT.GT.0) THEN
         DO 225 J=1,NGT
            I=IC(J)
            IF(ABS(DG(I)).GT.0.005) THEN
               ALP=-G(I)/DG(I)
               IF(J.GT.NAVC) THEN
                  IF(ALP.LT.ALP1.AND.ALP.GT.0.0001) ALP1=ALP
               ELSE
                  IF(ALP.GT.ALP2) ALP2=ALP
               ENDIF
               II=1
            ENDIF
225      CONTINUE
      ENDIF
      IF(II.EQ.1) THEN
         IF(ALP2.LT.ALP1.AND.ALP2.GT.0.0001) ALP1=ALP2
          ALPHA=ALP1
      ENDIF
      ALP=1.0E+20
      DO 230 I=1,NDV
         IF (ABS(S(I)).GT.ZRO) THEN
            CC=(SCALX(I)*XL(I)-X(I))/S(I)
            IF(CC.GT.ZRO.AND.CC.LT.ALP) ALP=CC
            CC=(SCALX(I)*XU(I)-X(I))/S(I)
            IF(CC.GT.ZRO.AND.CC.LT.ALP) ALP=CC
         ENDIF
230   CONTINUE
      IF (ALP.LT.ALPHA) ALPHA=ALP
      LGOTO=0
      KCOUNT=0
      IF(ALPSAV.LT.ZRO) ALPHA=.5*ALPHA
      IF (IPRNT2.GT.0) WRITE (IWRITE,690) ALPHA
      GMX1=1.0E+20
      GO TO 410
330   CONTINUE
      IF (NVC.GT.0.OR.NAVCR.EQ.0) GO TO 410
      KCOUNT=KCOUNT+1
      IF (KCOUNT.GT.10) GO TO 410
      IQ=0
      GMX=0.
      II=0
      DO 340 I=1,NAVC
         I1=IC(I)
         IF(DG(I1).LT.-0.001) GO TO 340
         GI=G(I1)
         GIA=ABS(GI)
         IF (GIA.GT.CTMIN) IQ=1
         IF (GIA.GT.GMX) GMX=GIA
         II=II+1
         GTMP(II)=GI
340   CONTINUE
      IF(IPRINT.GE.7) THEN
         OBJT=OBJ
         IF(MINMAX.GT.0) OBJT=-OBJT
         WRITE(IWRITE,700) OBJT
         ICALC=10
         JSCAL=0
         CALL DOT502(ICALC,GTMP,NAVCR,IWRITE,JSCAL,SCALX)
      ENDIF
      IF (GMX.GT.GMX1.OR.IQ.EQ.0) GO TO 410
      GMX1=GMX
      CALL DOT205 (NDV,NAVC,NAVCR,A,B,XTMP,GTMP,IC,DG)
      IF(IPRINT.GE.7) THEN
         ICALC=9
         JSCAL=1
         CALL DOT502(ICALC,XTMP,NDV,IWRITE,JSCAL,SCALX)
      ENDIF
      XMX=0.
      DO 390 I=1,NDV
         IF (ABS(XTMP(I)).GT.XMX) XMX=ABS(XTMP(I))
390   CONTINUE
      IF (XMX.LE.ZRO) GO TO 410
      DO 400 I=1,NDV
         X(I)=X(I)+XTMP(I)
         SCALI=SCALX(I)
         IF (X(I).LT.SCALI*XL(I)) X(I)=SCALI*XL(I)
         IF (X(I).GT.SCALI*XU(I)) X(I)=SCALI*XU(I)
400   CONTINUE
      IF(IPRINT.GE.7) THEN
         ICALC=8
         JSCAL=1
         IF (INFO.EQ.1) CALL DOT502 (ICALC,X,NDV,IWRITE,JSCAL,
     *   SCALX)
      ENDIF
      RETURN
410   CONTINUE
      OBJTRU=OBJ
      GMX1=1.0E+20
      CALL DOT100 (LGOTO,NDV,NCON,OBJ,X,XL,XU,G,
     1WK,IWK,ALPHA,ALPMAX,RPRM,IPRM,IPOINT,IPRNT2,SLOPF,MINMAX)
      IF (LGOTO.EQ.0) GO TO 420
      KCOUNT=0
      IGOTO=2
      INFO=1
      OBJ=OBJTRU
      RETURN
420   CONTINUE
      OBJTRU=OBJ
      OBJT=OBJTRU
      IF(MINMAX.GT.0) OBJT=-OBJT
      IF (IPRNT2.GT.0) WRITE (IWRITE,740) ALPHA
      IF (IPRINT.EQ.2) WRITE (IWRITE,730) ITER,OBJT
      IF (IPRINT.GT.2) WRITE(IWRITE,700) OBJT
      IF(IPRINT.GE.2) THEN
         JSCAL=1
         ICALC=1
         CALL DOT502 (ICALC,X,NDV,IWRITE,JSCAL,SCALX)
         ICALC=4
         JSCAL=0
         IF(IPRINT.GT.2) CALL DOT502 (ICALC,G,NCON,IWRITE,JSCAL,DUMMY)
      ENDIF
      IF(METHOD.EQ.1.AND.JWRITE.GT.0) CALL DOT506 (ITER,NDV,NCON,
     *JWRITE,OBJ,X,SCALX,G)
      NGRAD=1
      CALL DOT208 (OBJ,OBJ1,DELOBJ,DABOBJ,IDEL,IDAB)
      IF (ITER.GE.ITMAX) GO TO 460
      IF (NVC.GT.0.AND.ITER.GT.20) GO TO 460
      IF(IDEL.GT.0.OR.IDAB.GT.0) THEN
         CT=.25*CT
         CT=MIN(CT,-CTMIN)
      ELSE
         IF(NVC.GT.0.AND.ITER.GT.5) THEN
            CT=.25*CT
            CT=MIN(CT,-CTMIN)
         ENDIF
      ENDIF
      IF(NVC.GT.0) THEN
         JTRMOP=2*ITRMOP
         IF (IDEL.GE.JTRMOP.OR.IDAB.GE.JTRMOP) GO TO 460
      ELSE
         IF (IDEL.GE.ITRMOP.OR.IDAB.GE.ITRMOP) GO TO 460
      ENDIF
      IF(ALPHA.LE.ZRO.AND.NVC.GT.0) GO TO 440
      IF(NVC.GT.0) GO TO 40
      IF (ALPHA.GT.ZRO.OR.NAVC.EQ.0) GO TO 40
440   CALL DOT202 (NDV,A,NGT,IC,G,CT,CTMIN,NAC,NVC)
      NGRAD=0
      GO TO 40
460   CONTINUE
      CALL DOT203 (NDV,NCON,NGMAX,NGT,G,ITMP,CT,CTMIN,NAC,NVC,IGMAX)
      CALL DOT212 (NDV,NACS,X,XL,XU,ISIDC,SCALX)
      IF (IPRINT.EQ.0) GO TO 500
      WRITE (IWRITE,530)
      WRITE (IWRITE,540) ITER
      WRITE (IWRITE,520) CT
      NAVC=NAC+NVC
      WRITE (IWRITE,620) NAC,NVC
      IF (NAVC.GT.0) WRITE (IWRITE,630)
      IF (NAVC.GT.0) WRITE (IWRITE,640) (ITMP(I),I=1,NAVC)
      WRITE (IWRITE,650) NACS
      IF (NACS.EQ.0) GO TO 490
      N=0
      DO 480 I=1,NDV
         IF (ISIDC(I).EQ.0) GO TO 480
         IF (ISIDC(I).EQ.1) GO TO 470
         N=N+1
         ITMP(N)=-I
470      IF (ISIDC(I).LT.0) GO TO 480
         N=N+1
         ITMP(N)=I
480   CONTINUE
      WRITE (IWRITE,660)
      WRITE (IWRITE,640) (ITMP(I),I=1,NACS)
490   WRITE (IWRITE,550)
      IF (ITER.GE.ITMAX) WRITE (IWRITE,560)
      IF(NVC.GT.0) WRITE(IWRITE,565) ITER
      IF (IDEL.GE.ITRMOP) WRITE (IWRITE,570) ITRMOP
      IF (IDAB.GE.ITRMOP) WRITE (IWRITE,580) ITRMOP
      IF (ALPMAX.LE.ZRO) WRITE (IWRITE,592) ALPMAX,ZRO
      IF (RSDMX.LE.STOL) WRITE (IWRITE,590) RSDMX,STOL
      NACT=NAVC+NACS
      ZZ=1.0E-5
      IF (BETA.LE.ZZ.AND.NACT.GT.0) WRITE (IWRITE,600) BETA,ZZ
500   CONTINUE
      IGOTO=0
      RETURN
520   FORMAT (/,2X,'CONSTRAINT TOLERANCE, CT =',1PE13.5)
530   FORMAT (////,2X,'-- OPTIMIZATION IS COMPLETE')
540   FORMAT (/,2X,'NUMBER OF ITERATIONS =',I5)
550   FORMAT (/,2X,'TERMINATION CRITERIA')
560   FORMAT (/,2X,'NUMBER OF ITERATIONS = ITMAX')
565   FORMAT (/,2X,I4,' ITERATIONS FAILED TO PRODUCE A FEASIBLE',
     *' DESIGN',/,2X,'OPTIMIZATION TERMINATED')
570   FORMAT (/,2X,'RELATIVE CONVERGENCE CRITERION WAS MET FOR',I3,
     1' CONSECUTIVE ITERATIONS')
580   FORMAT (/,2X,'ABSOLUTE CONVERGENCE CRITERION WAS MET FOR',I3,
     1' CONSECUTIVE ITERATIONS')
590   FORMAT (/,2X,'MAXIMUM K-T RESIDUAL =',1PE13.5,' IS LESS THAN',
     11PE13.5)
592   FORMAT (/,2X,'MAXIMUM K-T RESIDUAL =',1PE13.5,' IS LESS THAN',
     11PE13.5)
600   FORMAT (/,2X,'MAXIMUM POSSIBLE MOVE =',1PE13.5,
     1' IS LESS THAN',1PE13.5)
610   FORMAT (//2X,'-- BEGIN CONSTRAINED OPTIMIZATION: MFD METHOD')
620   FORMAT (/,2X,'THERE ARE',I8,' ACTIVE CONSTRAINTS AND',I8,
     1' VIOLATED CONSTRAINTS')
630   FORMAT (2X,'CONSTRAINT NUMBERS')
640   FORMAT (2X,5I10)
650   FORMAT (/,2X,'THERE ARE',I8,' ACTIVE SIDE CONSTRAINTS')
660   FORMAT (2X,'VARIABLE NUMBERS (MINUS INDICATES LOWER BOUND)')
680   FORMAT (/,2X,'K-T PARAMETERS, BETA =',1PE13.5,2X,
     1'MAX. RESIDUAL =',1PE13.5)
690   FORMAT (/,2X,'PROPOSED ALPHA =',1PE13.5)
700   FORMAT (/,2X,'OBJECTIVE =',1PE12.5)
720   FORMAT (//,2X,'-- ITERATION NUMBER',I5)
730   FORMAT (//,2X,'-- ITERATION',I5,5X,'OBJ =',1PE12.5)
740   FORMAT (/,2X,'CALCULATED ALPHA =',1PE13.5)
      END
      SUBROUTINE DOT202 (NDV,A,NGT,IC,G,CT,CTMIN,NAC,NVC)
C
C                 ***** (C) COPYRIGHT *****
C     ***** VANDERPLAATS RESEARCH & DEVELOPMENT, INC. *****
C         ***** ALL RIGHTS RESERVED, WORLDWIDE *****
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION A(NDV,*),IC(*),G(*)
      NAC=0
      NVC=0
      DO 90 K=1,NGT
         ICK=IC(K)
         C1=CT
         C2=CTMIN
         GMAX=G(ICK)
         IF (GMAX.LT.C1) GO TO 40
         IF (GMAX.GE.C1.AND.GMAX.LE.C2) NAC=NAC+1
         IF (GMAX.GT.C2) NVC=NVC+1
         GO TO 90
40       CONTINUE
         IF (K.EQ.NGT) GO TO 90
         K1=K+1
         IK=0
         DO 60 J=K1,NGT
            ICJ=IC(J)
            IK=J
            C1=CT
            C2=CTMIN
            GG=G(ICJ)
            IF (GG.GE.C1.AND.GG.LE.C2) NAC=NAC+1
            IF (GG.GT.C2) NVC=NVC+1
            IF (GG.GE.C1) GO TO 70
60       CONTINUE
         GO TO 90
70       ICS=IC(K)
         IC(K)=IC(IK)
         IC(IK)=ICS
         DO 80 I=1,NDV
            TMP=A(I,K)
            A(I,K)=A(I,IK)
            A(I,IK)=TMP
80       CONTINUE
90    CONTINUE
      NN=NAC+NVC+1
      IF (NN.GE.NGT) RETURN
      NGT1=NGT-1
      DO 120 K=NN,NGT1
         ICK=IC(K)
         GMAX=G(ICK)
         K1=K+1
         IK=0
         DO 100 J=K1,NGT
            ICJ=IC(J)
            GG=G(ICJ)
            IF (GMAX.GT.GG) GO TO 100
            IK=J
            GMAX=GG
100      CONTINUE
         IF (IK.EQ.0) GO TO 120
         ICS=IC(K)
         IC(K)=IC(IK)
         IC(IK)=ICS
         DO 110 I=1,NDV
            TMP=A(I,K)
            A(I,K)=A(I,IK)
            A(I,IK)=TMP
110      CONTINUE
120   CONTINUE
      RETURN
      END
