
      SUBROUTINE DOT401(N,X,Y)
C
C                 ***** (C) COPYRIGHT *****
C     ***** VANDERPLAATS RESEARCH & DEVELOPMENT, INC. *****
C         ***** ALL RIGHTS RESERVED, WORLDWIDE *****
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION X(*),Y(*)
      DO 10 I=1,N
         Y(I)=X(I)
10    CONTINUE
      RETURN
      END
      SUBROUTINE DOT402 (N,G,CTMIN,GMCT,IG)
C
C                 ***** (C) COPYRIGHT *****
C     ***** VANDERPLAATS RESEARCH & DEVELOPMENT, INC. *****
C         ***** ALL RIGHTS RESERVED, WORLDWIDE *****
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION G(*)
      IG=1
      GMCT=G(1)-CTMIN
      IF (N.GT.1) THEN
         DO 10 I=2,N
            GG=G(I)-CTMIN
            IF (GG.GT.GMCT) THEN
               GMCT=GG
               IG=I
            ENDIF
10       CONTINUE
      ENDIF
      RETURN
      END
      SUBROUTINE DOT403 (N,A,SCAL)
C
C                 ***** (C) COPYRIGHT *****
C     ***** VANDERPLAATS RESEARCH & DEVELOPMENT, INC. *****
C         ***** ALL RIGHTS RESERVED, WORLDWIDE *****
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION A(*)
      ZRO=1.0E-6
      AMAX=0.
      DO 10 I=1,N
         AMAX=MAX(AMAX,ABS(A(I)))
10    CONTINUE
      SCAL=0.0
      IF (AMAX.GT.ZRO) THEN
         SCAL=AMAX
         SS=1./SCAL
         DO 20 I=1,N
            A(I)=SS*A(I)
20       CONTINUE
      ENDIF
      RETURN
      END
      SUBROUTINE DOT404 (N,X,Y,PROD)
C
C                 ***** (C) COPYRIGHT *****
C     ***** VANDERPLAATS RESEARCH & DEVELOPMENT, INC. *****
C         ***** ALL RIGHTS RESERVED, WORLDWIDE *****
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION X(*),Y(*)
      PROD=0.
      DO 10 I=1,N
         PROD=PROD+X(I)*Y(I)
10    CONTINUE
      RETURN
      END
      SUBROUTINE DOT405 (N,H,Y,S)
C
C                 ***** (C) COPYRIGHT *****
C     ***** VANDERPLAATS RESEARCH & DEVELOPMENT, INC. *****
C         ***** ALL RIGHTS RESERVED, WORLDWIDE *****
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION H(*),Y(*),S(*)
      DO 10 I=1,N
         S(I)=0.
10    CONTINUE
      S(1)=H(1)*Y(1)
      IF(N.EQ.1) RETURN
      NA=1
      DO 30 I=2,N
         IM1=I-1
         DO 20 J=1,IM1
         NA=NA+1
         S(I)=S(I)+H(NA)*Y(J)
         S(J)=S(J)+H(NA)*Y(I)
20       CONTINUE
         NA=NA+1
         S(I)=S(I)+H(NA)*Y(I)
30    CONTINUE
      RETURN
      END
      SUBROUTINE DOT406 (N,A)
C
C                 ***** (C) COPYRIGHT *****
C     ***** VANDERPLAATS RESEARCH & DEVELOPMENT, INC. *****
C         ***** ALL RIGHTS RESERVED, WORLDWIDE *****
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION A(*)
      NN=N*(N+1)/2
      DO 10 I=1,NN
         A(I)=0.
10    CONTINUE
      II=1
      DO 20 I=1,N
         A(II)=1.
         II=II+I+1
20    CONTINUE
      RETURN
      END
      SUBROUTINE DOT501 (A,N,IWRITE,JSCAL,SCAL)
C
C                 ***** (C) COPYRIGHT *****
C     ***** VANDERPLAATS RESEARCH & DEVELOPMENT, INC. *****
C         ***** ALL RIGHTS RESERVED, WORLDWIDE *****
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION A(*),SCAL(*),TMP(5)
      IMAX=(N-1)/5+1
      I1=1
      DO 10 I=1,IMAX
         I2=I1+4
         I2=MIN(I2,N)
         N1=I2-I1+1
         K=I1-1
         IF(JSCAL.GT.0) THEN
            DO 5 J=1,N1
               K=K+1
5           TMP(J)=A(K)/SCAL(K)
         ENDIF
         IF(JSCAL.LT.0) THEN
            DO 7 J=1,N1
               K=K+1
7           TMP(J)=A(K)*SCAL(K)
         ENDIF
         IF(JSCAL.EQ.0) THEN
            DO 6 J=1,N1
               K=K+1
6           TMP(J)=A(K)
         ENDIF
         CALL DOT505(IWRITE,I1,TMP,N1)
         I1=I1+5
10    CONTINUE
      RETURN
      END
      SUBROUTINE DOT502 (ICALC,A,N,IWRITE,JSCAL,SCAL)
C
C                 ***** (C) COPYRIGHT *****
C     ***** VANDERPLAATS RESEARCH & DEVELOPMENT, INC. *****
C         ***** ALL RIGHTS RESERVED, WORLDWIDE *****
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION A(*),SCAL(*)
      KSCAL=JSCAL
      GO TO (10,20,30,40,50,60,70,80,90,100), ICALC
10       WRITE (IWRITE,160)
      GO TO 130
20       WRITE (IWRITE,170)
      GO TO 130
30       WRITE (IWRITE,190)
         IF(JSCAL.GT.0) KSCAL=-1
      GO TO 130
40       WRITE (IWRITE,180)
      GO TO 130
50       WRITE (IWRITE,140)
      GO TO 130
60       WRITE (IWRITE,150)
      GO TO 130
70       WRITE (IWRITE,200)
      GO TO 130
80       WRITE (IWRITE,210)
      GO TO 130
90       WRITE (IWRITE,220)
      GO TO 130
100      WRITE (IWRITE,230)
130   CONTINUE
      CALL DOT501 (A,N,IWRITE,KSCAL,SCAL)
      RETURN
140   FORMAT(/,2X,'LOWER BOUNDS ON THE DECISION VARIABLES (XL-VECTOR)')
150   FORMAT(/,2X,'UPPER BOUNDS ON THE DECISION VARIABLES (XU-VECTOR)')
160   FORMAT (/,2X,'DECISION VARIABLES (X-VECTOR)')
170   FORMAT (/,2X,'SEARCH DIRECTION (S-VECTOR)')
180   FORMAT (/,2X,'CONSTRAINT VALUES (G-VECTOR)')
190   FORMAT (/,2X,'GRADIENT OF THE OBJECTIVE FUNCTION (DF-VECTOR)')
200   FORMAT (/,2X,'DG(I)/DALPHA VECTOR')
210   FORMAT (/,2X,'ADJUSTED DECISION VARIABLES (X-VECTOR)')
220   FORMAT (/,2X,'PERTURBATION OF X-VECTOR')
230   FORMAT (/,2X,'ACTIVE CONSTRAINT VALUES')
      END
      SUBROUTINE DOT503 (RPRM,IPRM,NRWK,NRIWK,IPOINT)
C
C                 ***** (C) COPYRIGHT *****
C     ***** VANDERPLAATS RESEARCH & DEVELOPMENT, INC. *****
C         ***** ALL RIGHTS RESERVED, WORLDWIDE *****
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION RPRM(*),IPRM(*),IPOINT(*)
      IWRITE=IPRM(5)
      WRITE (IWRITE,10)
      WRITE (IWRITE,20) (RPRM(I),RPRM(I+7),I=1,6),RPRM(7)
      WRITE (IWRITE,40)
      WRITE (IWRITE,50) IPRM(1),IPRM(6),IPRM(11),IPRM(2),IPRM(7),
     1IPRM(12),IPRM(3),IPRM(8),IPRM(13),IPRM(4),IPRM(9),IPRM(5),
     2IPRM(10)
      WRITE (IWRITE,60) NRWK,IPOINT(30),NRIWK,IPOINT(40)
      RETURN
10    FORMAT (//,2X,'-- SCALAR PROGRAM PARAMETERS',//,2X,
     1'REAL PARAMETERS')
20    FORMAT (2X,
     *'  1) CT     =',1PE13.5,4X,'        8) DX2    =',1PE13.5,/,2X,
     1'  2) CTMIN  =',1PE13.5,4X,'        9) FDCH   =',1PE13.5,/,2X,
     2'  3) DABOBJ =',1PE13.5,4X,'       10) FDCHM  =',1PE13.5,/,2X,
     3'  4) DELOBJ =',1PE13.5,4X,'       11) RMVLMZ =',1PE13.5,/,2X,
     4'  5) DOBJ1  =',1PE13.5,4X,'       12) DABSTR =',1PE13.5,/,2X,
     5'  6) DOBJ2  =',1PE13.5,4X,'       13) DELSTR =',1PE13.5,/,2X,
     6'  7) DX1    =',1PE13.5)
40    FORMAT (/,2X,'INTEGER PARAMETERS')
50    FORMAT (2X,'  1) IGRAD  =',I7,2X,'  6) NCOLA  =',I7,2X,
     1' 11) IPRNT1 =',I7,/,2X,'  2) ISCAL  =',I7,2X,
     *'  7) IGMAX  =',I7,2X,
     2' 12) IPRNT2 =',I7,/,2X,'  3) ITMAX  =',I7,2X,
     3'  8) JTMAX  =',I7,2X,' 13) JWRITE =',I7,/,2X,'  4) ITRMOP =',I7,
     42X,'  9) ITRMST =',I7,/,2X,'  5) IWRITE =',I7,2X,
     5' 10) JPRINT =',I7)
60    FORMAT (//,2X,'   STORAGE REQUIREMENTS',/,2X,
     *'ARRAY  DIMENSION  REQUIRED',/,2X,
     *'  WK',2I10,/,2X,' IWK',2I10)
      END
      SUBROUTINE DOT504 (NDV,NCON,X,XL,XU,G,OBJ,MINMAX,IWRITE)
C
C                 ***** (C) COPYRIGHT *****
C     ***** VANDERPLAATS RESEARCH & DEVELOPMENT, INC. *****
C         ***** ALL RIGHTS RESERVED, WORLDWIDE *****
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION X(*),XL(*),XU(*),G(*),DUMY(1)
      WRITE (IWRITE,40)
      OBJT=OBJ
      IF(MINMAX.GT.0) OBJT=-OBJT
      WRITE (IWRITE,50) OBJT
      WRITE (IWRITE,60)
      DO 10 I=1,NDV
         WRITE (IWRITE,70) I,XL(I),X(I),XU(I)
10    CONTINUE
      IF (NCON.GT.0) THEN
         WRITE (IWRITE,80)
         JSCAL=0
         CALL DOT501(G,NCON,IWRITE,JSCAL,DUMY)
      ENDIF
      RETURN
40    FORMAT (//,2X,'-- OPTIMIZATION RESULTS')
50    FORMAT (//,2X,'OBJECTIVE, F(X) =',1PE15.5)
60    FORMAT (//,2X,'DECISION VARIABLES, X',//,5X,'ID',9X,'XL',13X,'X',
     112X,'XU')
70    FORMAT (2X,I5,2X,3(1PE14.5))
80    FORMAT (//,2X,'CONSTRAINTS, G(X)',/)
      END
      SUBROUTINE DOT505(IWRITE,I1,TMP,N1)
C
C                 ***** (C) COPYRIGHT *****
C     ***** VANDERPLAATS RESEARCH & DEVELOPMENT, INC. *****
C         ***** ALL RIGHTS RESERVED, WORLDWIDE *****
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION TMP(N1)
      WRITE(IWRITE,20)I1,TMP
20    FORMAT (I8,')',5(1PE14.5))
      RETURN
      END
      SUBROUTINE DOT506 (ITER,NDV,NCON,JWRITE,OBJ,X,SCALX,G)
C
C                 ***** (C) COPYRIGHT *****
C     ***** VANDERPLAATS RESEARCH & DEVELOPMENT, INC. *****
C         ***** ALL RIGHTS RESERVED, WORLDWIDE *****
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION X(*),SCALX(*),G(*),TMP(5)
      WRITE(JWRITE,100)ITER,NDV,NCON
      WRITE(JWRITE,200)OBJ
      IMAX=(NDV-1)/5+1
      I1=1
      DO 30 I=1,IMAX
         I2=I1+4
         I2=MIN(I2,NDV)
         N1=I2-I1+1
         K=I1-1
         DO 10 J=1,N1
            K=K+1
10       TMP(J)=X(K)/(SCALX(K))
         WRITE(JWRITE,200)(TMP(J),J=1,N1)
         I1=I1+5
30    CONTINUE
      IF(NCON.LE.0) RETURN
      IMAX=(NCON-1)/5+1
      I1=1
      DO 60 I=1,IMAX
         I2=I1+4
         I2=MIN(I2,NCON)
         N1=I2-I1+1
         K=I1-1
         DO 40 J=1,N1
            K=K+1
40       TMP(J)=G(K)
         WRITE(JWRITE,200)(TMP(J),J=1,N1)
         I1=I1+5
60    CONTINUE
100   FORMAT(1X,7I10)
200   FORMAT(1X,5E15.8)
      RETURN
      END
      SUBROUTINE DOT510 (NDV,NCON,NCOLA,METHOD,NRWK,NRIWK,NRB,NGMAX,
     *XL,XU)
C
C                 ***** (C) COPYRIGHT *****
C     ***** VANDERPLAATS RESEARCH & DEVELOPMENT, INC. *****
C         ***** ALL RIGHTS RESERVED, WORLDWIDE *****
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION XL(*),XU(*)
      IF(NCON.EQ.0) THEN
         NCOLA=0
         NGMAX=0
         NRB=0
         NRWK=10*NDV+40
         IF(METHOD.LT.2) NRWK=NRWK+NDV*(NDV+1)/2
         NRIWK=NDV+71
      ELSE
         IF(NCOLA.LE.0) THEN
            NCOLA=NCON
            IF(NCOLA.GT.(10*NDV)) NCOLA=10*NDV
         ENDIF
         NRB=0
         NRBS=0
         DO 5 I=1,NDV
            XLI=XL(I)
            XUI=XU(I)
            IF(ABS(XLI).GE.0.9E+30.AND.ABS(XUI).GE.0.9E+30) GO TO 5
            IF(ABS(XLI).LT.0.9E+30.OR.ABS(XUI).LT.0.9E+30) THEN
               NRB=NRB+1
               DX=(XUI-XLI)/(MAX(ABS(XLI),ABS(XUI))+0.001)
               IF(DX.LE.0.001) NRBS=NRBS+1
            ENDIF
5        CONTINUE
         IF(METHOD.GT.1) NRB=MAX(NRB,NDV)
         NRB=NRB+NRBS+NCOLA+1
         NGMAX=MIN(NCON,NCOLA)
         NRWK=NDV*(10+NCOLA)+MAX(NDV,NCOLA)+6*NCON+NRB**2+
     *   2*NRB+40
         NRIWK=NDV+2*MAX(NDV,NGMAX)+NCON+71
         IF(METHOD.GT.1) THEN
            NRWK=NRWK+2*NCON+NDV*(3+NCOLA)
            NRIWK=NRIWK+NGMAX
            IF(METHOD.EQ.2) NRIWK=NRIWK+NDV
            IF(METHOD.EQ.3) NRWK=NRWK+NDV+NDV*(NDV+1)/2
     *      +NCON+MAX(NDV,NCON)
         ENDIF
      ENDIF
      RETURN
      END
      SUBROUTINE DOT511 (NDV,H,IWRITE)
C
C                 ***** (C) COPYRIGHT *****
C     ***** VANDERPLAATS RESEARCH & DEVELOPMENT, INC. *****
C         ***** ALL RIGHTS RESERVED, WORLDWIDE *****
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION H(*)
      WRITE (IWRITE,20)
      NA=0
      DO 10 I=1,NDV
      NA=NA+I-1
      I2=MIN0(5,I)
      WRITE (IWRITE,30) I,(H(NA+J),J=1,I2)
      IF (I.GT.5) WRITE (IWRITE,40) (H(NA+J),J=6,I)
10    CONTINUE
      RETURN
20    FORMAT (/,2X,'HESSIAN MATRIX (LOWER HALF)')
30    FORMAT (I9,')',5(1PE14.5))
40    FORMAT (10X,1PE14.5,1PE14.5,1PE14.5,1PE14.5,1PE14.5)
      END
      SUBROUTINE DOT300 (IGOTO,INFO,NDV,NCON,NGT,NAC,NVC,IPRINT,OBJ,
     *X,XL,XU,DF,G,IC,ISIDC,ITMP,A,WK,IWK,RPRM,IPRM,IPOINT,MINMAX,
     *SCALX,NSCAL,IDAB,IDEL,NACS,OBJR,OBJ1,RMVLMT,JTER,XLSLP,XUSLP,
     *GZRO,XZRO,ASLP,ICSLP,METHOD,NGMAX,NRB,GMXOLD,IMOVE,NAVCR)
C
C                 ***** (C) COPYRIGHT *****
C     ***** VANDERPLAATS RESEARCH & DEVELOPMENT, INC. *****
C         ***** ALL RIGHTS RESERVED, WORLDWIDE *****
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION G(*),IC(*),DF(*),A(NDV,*),X(*),WK(*),IWK(*),
     1XL(*),XU(*),SCALX(*),ISIDC(*),ITMP(*),IPOINT(*),
     1RPRM(*),IPRM(*),XLSLP(*),XUSLP(*),GZRO(*),XZRO(*),ASLP(NDV,*),
     3ICSLP(*),DUMMY(1),IMOVE(*)
      ZRO=1.0E-10
      CT=RPRM(1)
      CTMIN=RPRM(2)
      DABSTR=RPRM(12)
      DELSTR=RPRM(13)
      IGRAD=IPRM(1)
      IWRITE=IPRM(5)
      IGMAX=IPRM(7)
      JTMAX=IPRM(8)
      ITRMST=IPRM(9)
      JPRINT=IPRM(10)
      JWRITE=IPRM(13)
      JSCAL=1
      IGOTO1=IGOTO+1
      GO TO (10,36,80,502,508), IGOTO1
10    CONTINUE
      IF (IPRINT.GT.1) WRITE (IWRITE,280)
      OBJR=1.0E20
      RMVLMT=RPRM(11)
      JTER=0
      IDEL=0
      IDAB=0
      DO 15 I=1,NDV
         IMOVE(I)=0
15    CONTINUE
      IF(JWRITE.GT.0) CALL DOT506 (JTER,NDV,NCON,JWRITE,OBJ,X,
     1SCALX,G)
      CTMP=0.
      CALL DOT402 (NCON,G,CTMP,GMAX,JGMAX)
      GMXOLD=GMAX
20    CONTINUE
      OBJ1=OBJ
      JTER=JTER+1
      IF (IPRINT.GT.2) WRITE (IWRITE,310) JTER,RMVLMT
      CUT=-0.5
      IF(IGRAD.EQ.0) CUT=-10000.
      CALL DOT302 (NCON,CUT,NGMAX,G,IC,NGT)
      IGOTO=1
      INFO=2
      RETURN
36    CONTINUE
      IF(IPRINT.GE.4) THEN
         ICALC=3
         JSCAL=1
         CALL DOT502(ICALC,DF,NDV,IWRITE,JSCAL,SCALX)
         IF (NCON.GT.0.AND.NGT.GT.0) THEN
            WRITE (IWRITE,330) NGT
            WRITE (IWRITE,340) (IC(I),I=1,NGT)
            JSCAL=-1
            DO 1280 J=1,NGT
               JJ=IC(J)
               WRITE(IWRITE,282) JJ
               CALL DOT501(A(1,J),NDV,IWRITE,JSCAL,SCALX)
1280        CONTINUE
         ENDIF
      ENDIF
282   FORMAT(/,2X,'GRADIENT OF RETAINED CONSTRAINT NUMBER',I10)
      OBJZ=OBJ
      CALL DOT401(NCON,G,GZRO)
      DO 35 I=1,NDV
         OBJZ=OBJZ-DF(I)*X(I)
35    CONTINUE
      DO 40 J=1,NGT
         ICJ=IC(J)
         GJ=G(ICJ)
         GZRO(J)=GJ
         DO 42 I=1,NDV
            GZRO(J)=GZRO(J)-A(I,J)*X(I)
42       CONTINUE
         IF(GJ.LE.ZRO) GO TO 40
         ABGJ=ABS(GJ)
         DO 55 K=1,NGT
            IF(K.EQ.J) GO TO 55
            ICK=IC(K)
            GK=G(ICK)
            GJGK=GJ*GK
            DELTAG=ABS(GJ+GK)/(1.+ABGJ)
            IF(DELTAG.LT.ZRO.AND.GJGK.LT.0.) GO TO 40
55       CONTINUE
         GZRO(J)=GZRO(J)+MIN(GJ,CTMIN)
40    CONTINUE
      CALL DOT401(NDV,X,XZRO)
48    CONTINUE
      ONE=1.0
      DO 50 I=1,NDV
         SCLX=XZRO(I)/SCALX(I)
         ABSX=ABS(SCLX)
         ABSX=MAX(ABSX,ONE)
         XLIMU=RMVLMT*ABSX
         XLIML=-XLIMU
         IF(IMOVE(I).NE.0) THEN
            NN=IMOVE(I)
            MM=IABS(NN)
            FACT=1.+FLOAT(MM)
            IF(MM.GE.10) FACT=ONE/(ONE+FLOAT(MM/10))
            IF(NN.LT.0.OR.MM.GE.10) XLIML=FACT*XLIML
            IF(NN.GT.0.OR.MM.GE.10) XLIMU=FACT*XLIMU
         ENDIF
         FACT=0.00101/SCALX(I)
         IF(XLIML.GT.-FACT) XLIML=-FACT
         IF(XLIMU.LT.FACT) XLIMU=FACT
         DD=XL(I)-XZRO(I)/SCALX(I)
         XLSLP(I)=SCLX+MAX(XLIML,DD)
         DD=XU(I)-XZRO(I)/SCALX(I)
         XUSLP(I)=SCLX+MIN(XLIMU,DD)
50    CONTINUE
      NGTSUB=NGT
      CALL DOT301 (NDV,NGTSUB,X,A,DF,G,GZRO,ICSLP,XLSLP,XUSLP,WK,
     1IWK,OBJZ,IPOINT,IPRM,IPRINT,SCALX,NSCAL,MINMAX,RPRM,
     2CT,JPRINT,ASLP,METHOD,NGMAX,NRB,OBJ,NAVCR)
      IF(IPRM(18).GT.0) GO TO 130
      DO 56 I=1,NDV
         NN=0
         DD=X(I)-XLSLP(I)*SCALX(I)
         IF(DD.LE.0.001) THEN
            NN=IMOVE(I)
            MM=IABS(NN)
            LL=NN
            IF(MM.LT.10.AND.LL.LE.0) NN=NN-1
            IF(MM.LT.10.AND.LL.GT.0) NN=-10
            IF(LL.LE.-10) NN=-1
            IF(LL.GE.10) NN=-NN-10
         ENDIF
         DD=SCALX(I)*XUSLP(I)-X(I)
         IF(DD.LE.0.001) THEN
            NN=IMOVE(I)
            MM=IABS(NN)
            LL=NN
            IF(MM.LT.10.AND.LL.GE.0) NN=NN+1
            IF(MM.LT.10.AND.LL.LT.0) NN=10
            IF(LL.GE.10) NN=1
            IF(LL.LE.-10) NN=-NN+10
         ENDIF
         IF(NN.GT.20) NN=20
         IF(NN.LT.10.AND.NN.GT.2) NN=2
         IF(NN.LT.-20) NN=-20
         IF(NN.GT.-10.AND.NN.LT.-2) NN=-2
         IMOVE(I)=NN
56    CONTINUE
      OBJW=OBJ
      IF(MINMAX.GT.0) OBJW=-OBJW
      IF(IPRINT.GE.4) WRITE(IWRITE,911)OBJ
911   FORMAT (/,2X,'APPROXIMATE OBJ =',1PE12.5)
      IGOTO=2
      INFO=1
      RETURN
80    CONTINUE
      OBJW=OBJ
      IF(MINMAX.GT.0) OBJW=-OBJW
      IF(IPRINT.EQ.2) WRITE(IWRITE,301)JTER,OBJW
      IF (IPRINT.GT.2) WRITE (IWRITE,300) OBJW
      IF (IPRINT.GT.1) THEN
         ICALC=1
         CALL DOT502 (ICALC,X,NDV,IWRITE,JSCAL,SCALX)
         ICALC=4
         JSCAL=0
         IF(IPRINT.GT.2) CALL DOT502 (ICALC,G,NCON,IWRITE,JSCAL,DUMMY)
      ENDIF
      CTMP=0.
      CALL DOT402 (NCON,G,CTMP,GMAX,JGMAX)
      IF (IPRINT.GE.3) WRITE (IWRITE,320) GMAX
      IF(JTER.EQ.1) GO TO 500
      ICHK=0
      JCHK=0
      IF(GMAX.GT.CTMIN.AND.GMAX.GT.GMXOLD) ICHK=1
      IF(GMAX.LE.CTMIN.AND.GMXOLD.LE.CTMIN) THEN
         IF(GMAX.GT.GMXOLD.AND.OBJ.GT.OBJ1) JCHK=1
      ENDIF
      IF(ICHK.EQ.0.AND.JCHK.EQ.0) GO TO 500
      IF(IPRINT.GT.1.AND.ICHK.GT.0) WRITE(IWRITE,555)
      IF(IPRINT.GT.1.AND.JCHK.GT.0) WRITE(IWRITE,556)
555   FORMAT(/,2X,'CONSTRAINT VIOLATION IS INCREASED.  MOVE HALF WAY')
556   FORMAT(/,2X,'OBJECTIVE FUNCTION IS INCREASED.  MOVE HALF WAY')
      IF(ICHK.GT.0.OR.JCHK.GT.0) RMVLMT=.5*RMVLMT
      IF(RMVLMT.LT.0.002) RMVLMT=0.002
      DO 501 I=1,NDV
         X(I)=0.5*(X(I)+XZRO(I))
501   CONTINUE
       IGOTO=3
       INFO=1
       RETURN
502   CONTINUE
      OBJW=OBJ
      IF (IPRINT.GE.2) WRITE (IWRITE,300) OBJW
      IF (IPRINT.GT.1) THEN
         ICALC=1
         CALL DOT502 (ICALC,X,NDV,IWRITE,JSCAL,SCALX)
         ICALC=4
         JSCAL=0
         IF(IPRINT.GT.2) CALL DOT502 (ICALC,G,NCON,IWRITE,JSCAL,DUMMY)
      ENDIF
      CTMP=0.
      CALL DOT402 (NCON,G,CTMP,GMAX,JGMAX)
      IF (IPRINT.GE.3) WRITE (IWRITE,320) GMAX
      ICHK=0
      JCHK=0
      IF(GMAX.GT.CTMIN.AND.GMAX.GE.GMXOLD) ICHK=1
      IF(GMAX.LT.CTMIN.AND.GMXOLD.LE.CTMIN) THEN
         IF(OBJ.GT.OBJ1) JCHK=1
      ENDIF
      IF(ICHK.EQ.0.AND.JCHK.EQ.0) GO TO 500
      IF(IPRINT.GT.1.AND.ICHK.GT.0) WRITE(IWRITE,555)
      IF(IPRINT.GT.1.AND.JCHK.GT.0) WRITE(IWRITE,556)
      DO 507 I=1,NDV
         X(I)=0.5*(X(I)+XZRO(I))
507   CONTINUE
       IGOTO=4
       INFO=1
       RETURN
508   CONTINUE
      OBJW=OBJ
      IF (IPRINT.GE.2) WRITE (IWRITE,300) OBJW
      IF (IPRINT.GT.1) THEN
         ICALC=1
         CALL DOT502 (ICALC,X,NDV,IWRITE,JSCAL,SCALX)
         ICALC=4
         JSCAL=0
         IF(IPRINT.GT.2) CALL DOT502 (ICALC,G,NCON,IWRITE,JSCAL,DUMMY)
      ENDIF
      CTMP=0.
      CALL DOT402 (NCON,G,CTMP,GMAX,JGMAX)
      IF (IPRINT.GE.3) WRITE (IWRITE,320) GMAX
500   CONTINUE
      IF(JWRITE.GT.0) CALL DOT506 (JTER,NDV,NCON,JWRITE,OBJ,X,
     1SCALX,G)
      IF (JTER.GE.JTMAX) GO TO 90
      CALL DOT208 (OBJ,OBJ1,DELSTR,DABSTR,IDEL,IDAB)
      IF(GMAX.GT.CTMIN) THEN
         IDEL=0
         IDAB=0
      ENDIF
      IF(GMAX.LE.CTMIN) THEN
         IF(IDEL.GE.ITRMST.OR.IDAB.GE.ITRMST) GO TO 90
      ENDIF
      IF (IDEL.GE.1.OR.IDAB.GE.1) RMVLMT=.5*RMVLMT
      IF(RMVLMT.LE.0.002) RMVLMT=.002
      GMXOLD=GMAX
      OBJ1=OBJ
      GO TO 20
90    CONTINUE
      IF (IPRINT.EQ.0) GO TO 130
         WRITE (IWRITE,170) JTER
         CALL DOT203 (NDV,NCON,NGMAX,NGT,G,IC,CT,CTMIN,NAC,NVC,IGMAX)
         CALL DOT212 (NDV,NACS,X,XL,XU,ISIDC,SCALX)
         WRITE (IWRITE,180) CT
         NAVC=NAC+NVC
         WRITE (IWRITE,230) NAC,NVC
         IF (NAVC.GT.0) WRITE (IWRITE,240)
         IF (NAVC.GT.0) WRITE (IWRITE,250) (IC(I),I=1,NAVC)
         WRITE (IWRITE,260) NACS
         IF (NACS.EQ.0) GO TO 120
            N=0
            DO 110 I=1,NDV
            IF (ISIDC(I).EQ.0) GO TO 110
            IF (ISIDC(I).EQ.1) GO TO 100
               N=N+1
               ITMP(N)=-I
100         IF (ISIDC(I).LT.0) GO TO 110
            N=N+1
            ITMP(N)=I
110      CONTINUE
         WRITE (IWRITE,270)
         WRITE (IWRITE,250) (ITMP(I),I=1,NACS)
120      WRITE (IWRITE,190)
         IF (JTER.GE.JTMAX) WRITE (IWRITE,200)
         IF (IDEL.GE.ITRMST) WRITE (IWRITE,210) ITRMST
         IF (IDAB.GE.ITRMST) WRITE (IWRITE,220) ITRMST
130   CONTINUE
      INFO=0
      IGOTO=0
      RETURN
170   FORMAT (////,2X,'-- OPTIMIZATION IS COMPLETE',//,2X,
     1'NUMBER OF CONSTRAINED MINIMIZATIONS =',I5)
180   FORMAT (/,2X,'CONSTRAINT TOLERANCE, CT =',1PE12.5)
190   FORMAT (/,2X,'TERMINATION CRITERIA')
200   FORMAT (/,2X,'NUMBER OF ITERATIONS = JTMAX')
210   FORMAT (/,2X,'RELATIVE CONVERGENCE CRITERION WAS MET FOR',I3,
     1' CONSECUTIVE ITERATIONS')
220   FORMAT (/,2X,'ABSOLUTE CONVERGENCE CRITERION WAS MET FOR',I3,
     1' CONSECUTIVE ITERATIONS')
230   FORMAT (/,2X,'THERE ARE',I8,' ACTIVE CONSTRAINTS AND',I8,
     1' VIOLATED CONSTRAINTS')
240   FORMAT (2X,'CONSTRAINT NUMBERS')
250   FORMAT (2X,5I10)
260   FORMAT (/,2X,'THERE ARE',I8,' ACTIVE SIDE CONSTRAINTS')
270   FORMAT (2X,'VARIABLE NUMBERS (MINUS INDICATES LOWER BOUND)')
280   FORMAT (//,2X,'-- BEGIN CONSTRAINED OPTIMIZATION: SLP METHOD')
300   FORMAT (/,2X,'OBJ =',1PE12.5)
301   FORMAT (/,2X,'ITERATION',I5,5X,'OBJ =',1PE12.5)
310   FORMAT (/,2X,'-- BEGIN SLP ITERATION',I5,5X,
     *'RELATIVE MOVE LIMIT =',F8.5)
320   FORMAT (/,2X,'GMAX=',1PE12.4)
330   FORMAT (/,2X,'RETAINED CONSTRAINTS (',I8,' )')
340   FORMAT (2X,7I10)
      END
      SUBROUTINE DOT301 (NDV,NGT,X,A,DF,G,GZRO,ICSLP,XLSLP,
     1XUSLP,WK,IWK,OBJZ,IPOINT,IPRM,IPRINT,SCALX,
     2NSCAL,MINMAX,RPRM,CT,JPRINT,ASLP,METHOD,NGMAX,NRB,OBJ,NAVCR)
C
C                 ***** (C) COPYRIGHT *****
C     ***** VANDERPLAATS RESEARCH & DEVELOPMENT, INC. *****
C         ***** ALL RIGHTS RESERVED, WORLDWIDE *****
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION A(NDV,*),DF(*),G(*),GZRO(*),ICSLP(*),
     1WK(*),IWK(*),XLSLP(*),XUSLP(*),X(*),IPOINT(*),IPRM(*),SCALX(*),
     2RPRM(*),ASLP(NDV,*)
      NCON=NGT
      KGOTO=0
      INFO=0
      NVC=0
      CTSAV=RPRM(1)
      RPRM(1)=-.001
      CTMSAV=RPRM(2)
      RPRM(2)=.0005
      NXTMP1=IPOINT(3)
      NS=IPOINT(6)
      NB=IPOINT(8)
      NGTMP=IPOINT(9)
      NGL=IPOINT(10)
      NDG=IPOINT(14)
      NC=IPOINT(15)
      NTHETA=IPOINT(16)
      NISIDC=IPOINT(32)
      NITMP=IPOINT(33)
      KPRINT=0
      IF(JPRINT.GT.0) KPRINT=IPRINT
40    CONTINUE
      CALL DOT404(NDV,X,DF,DOBJ)
      OBJ=OBJZ+DOBJ
      DO 60 J=1,NCON
      G(J)=GZRO(J)
      DO 50 I=1,NDV
      G(J)=G(J)+A(I,J)*X(I)
50    CONTINUE
60    CONTINUE
      IF(INFO.LT.2) GO TO 69
      DO 61 J=1,NGT
         JJ=ICSLP(J)
         DO 61 I=1,NDV
            ASLP(I,J)=A(I,JJ)
61    CONTINUE
69    CONTINUE
      CALL DOT201 (KGOTO,INFO,NDV,NCON,NGT,NAC,NVC,KPRINT,OBJ,X,
     *XLSLP,XUSLP,DF,WK(NS),G,ICSLP,WK(NDG),WK(NTHETA),WK(NC),
     1IWK(NISIDC),WK(NXTMP1),WK(NGL),IWK(NITMP),ASLP,
     2WK(NB),NRB,WK,IWK,WK(NGTMP),RPRM,IPRM,IPOINT,MINMAX,SCALX,
     3NSCAL,ALPHA,ALPMAX,ALPSAV,DF2,PHI,GMX1,IDAB,
     4IDEL,ITER,KCOUNT,LGOTO,NACS,CT,METHOD,NGMAX,OBJ1,SLOPF,
     5SCALS,ICOUNT,NAVCR)
      IF (KGOTO.GT.0) GO TO 40
      CALL DOT404(NDV,X,DF,DOBJ)
      OBJ=OBJZ+DOBJ
      DO 80 J=1,NCON
         G(J)=GZRO(J)
         DO 70 I=1,NDV
            G(J)=G(J)+A(I,J)*X(I)
70       CONTINUE
80    CONTINUE
      RPRM(1)=CTSAV
      RPRM(2)=CTMSAV
      RETURN
      END
      SUBROUTINE DOT302 (NCON,CUT,NGMAX,G,IC,NGT)
C
C                 ***** (C) COPYRIGHT *****
C     ***** VANDERPLAATS RESEARCH & DEVELOPMENT, INC. *****
C         ***** ALL RIGHTS RESERVED, WORLDWIDE *****
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION G(*),IC(*)
      NGT=0
      DO 90 I=1,NGMAX
         GMAX=-1.0E+15
         KK=0
         DO 80 J=1,NCON
            IF(NGT.GT.0) THEN
               DO 70 K=1,NGT
                  IF(IC(K).EQ.J) GO TO 80
70             CONTINUE
            ENDIF
            GG=G(J)
            IF(GG.GT.GMAX) THEN
               GMAX=GG
               KK=J
            ENDIF
80       CONTINUE
         IF(KK.EQ.0.OR.GMAX.LT.CUT) GO TO 100
         NGT=NGT+1
         IC(NGT)=KK
90    CONTINUE
100   CONTINUE
      RETURN
      END
